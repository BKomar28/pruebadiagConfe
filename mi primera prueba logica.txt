Sistema de Automatización y Análisis de Pedidos Escenario Tu equipo necesita automatizar y analizar datos provenientes de un archivo JSON que contiene información de pedidos de clientes. Los pedidos tienen la estructura anexa.

-primero se comienza importando en json los datos para las pruebas :
Procesamiento de Pedidos: a. Filtra los pedidos con estado "pendiente".
Primero se separa los que están en  el estado pendiente con php.
$pedidos = json_decode(file_get_contents('pedidos.json'), true);

$pendientes = array_filter($pedidos, function($pedido) {
    return $pedido['estado'] === 'pendiente';
});

 b. Valida que el campo monto sea igual a la suma de (cantidad * precio_unitario) de los items. Si no coincide, registra el id_pedido en un archivo de errores.
En este paso se hace valida que la suma sea igual a cantidad *precio _unitario = para validar resultados .y en caso que no reslata un error , pero en este caso no hubo ningun error.
$pedidos = json_decode(file_get_contents('pedidos.json'), true);

$errores = [];

foreach ($pedidos as $pedido) {
    
    $suma_items = 0;
    foreach ($pedido['items'] as $item) {
        $suma_items += $item['cantidad'] * $item['precio_unitario'];
    }

    
    if ($suma_items !== $pedido['monto']) {
      
        $errores[] = $pedido['id_pedido'];
    }
}

Genera un archivo CSV con los pedidos pendientes, incluyendo las columnas: id_pedido, cliente, fecha, monto, y el número total de productos (items). 
Luego de jalar el código donde se separaba los que estaban  en estado pendiente  se procede  a crear un archivo csv  con las indicaciones que se solicita.



<?php

$pedidos = json_decode(file_get_contents('pedidos.json'), true);

$pendientes = array_filter($pedidos, function($pedido) {
    return $pedido['estado'] === 'pendiente';
});

$total_monto = 0;
$total_productos = 0;

$csv_data = [];

$csv_data[] = ['id_pedido', 'cliente', 'fecha', 'monto', 'total_productos'];

foreach ($pendientes as $pedido) {
    $total_items = 0;

   
    foreach ($pedido['items'] as $item) {
        $total_items += $item['cantidad'];
    }

    $csv_data[] = [
        $pedido['id_pedido'],
        $pedido['cliente'],
        $pedido['fecha'],
        $pedido['monto'],
        $total_items
    ];

    $total_monto += $pedido['monto'];
    $total_productos += $total_items;
}

b. Calcula el monto total y el promedio de los pedidos pendientes, y agrega estas métricas al final del archivo CSV como una fila de resumen.
Al final se agrega un metrica de total con el monto sumado  todo en php 
$csv_data[] = ['Total', '', '', $total_monto, $total_productos];

$filename = 'pedidos_pendientes.csv';
$fp = fopen($filename, 'w');

foreach ($csv_data as $row) {
    fputcsv($fp, $row);
}

fclose($fp);



Identifica el cliente con el mayor monto acumulado en pedidos completados y genera un archivo JSON con su información, incluyendo el monto total de sus pedidos   se identifo al cliente con el monto máximo y se utilizo arrys para poder determinar el mayor monto acumulado comparando con cada uno de los clientes.

$max_cliente = array_keys($monto_por_cliente, max($monto_por_cliente))[0];

$cliente_info = null;
foreach ($completados as $pedido) {
    if ($pedido['cliente'] === $max_cliente) {
        $cliente_info = [
            'cliente' => $pedido['cliente'],
            'monto_total' => $monto_por_cliente[$max_cliente],
            'pedidos' => array_filter($completados, function($p) use ($max_cliente) {
                return $p['cliente'] === $max_cliente;
            })
        ];
        break;
    }
}

$filename = 'max_cliente';
file_put_contents($filename, json_encode($cliente_info, JSON_PRETTY_PRINT));

echo "Archivo JSON generado con éxito: $filename";
?>


También el hecho de las tildes y ñ generalmente causan problemas y conflictos se debe manejar esos temas para mejorar las consultas
